---
name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DATREE_TOKEN: ${{ secrets.DATREE_TOKEN }}

jobs:
  env:
    uses: devxp-tech/.github/.github/workflows/env.yaml@main

  yaml-linter:
    name: Yaml Linter 🧹
    runs-on: ubuntu-latest
    needs:
      - env
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Yaml Lint
        uses: ibiqlik/action-yamllint@2576378a8e339169678f9939646ee3ee325e845c # v3
        with:
          no_warnings: true

  kube-linter:
    name: Kube Linter 🧹
    runs-on: ubuntu-latest
    needs:
      - env
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4

      - name: Scan repo
        id: kube-lint-repo
        uses: stackrox/kube-linter-action@5792edc6a03735d592b13c08201711327a935735 # v1.0.5
        with:
          directory: apps
          format: sarif
          output-file: kube-linter.sarif
        continue-on-error: true

  secret-find:
    name: Secrets Find 🔍
    runs-on: ubuntu-latest
    needs:
      - env
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Find Secrets 🔍
        shell: bash
        run: |
          if find apps/ -name '*.yaml' | xargs grep -q "kind: Secret"; then
              echo "Fail, secret found! :("
              exit 1
          else
              echo "Success, secret not found! :)"
              exit 0
          fi

  # datree-check:
  #   name: Datree Check 🔒
  #   runs-on: ubuntu-latest
  #   needs:
  #     - env
  #   steps:
  #     - name: Checkout 🛎️
  #       uses: actions/checkout@v3
  #     - name: Run Datree Policy Check
  #       uses: datreeio/action-datree@main
  #       with:
  #         path: 'apps/*/base/*.yaml'
  #         cliArguments: '--only-k8s-files --ignore-missing-schemas'

  trivy-scan:
    name: Trivy Vulnerability Scanner 🔒
    needs:
      - env
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code 🛎️
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4

      - name: Run Trivy vulnerability scanner in IaC mode 🔎
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@9fdb3e49720b44c48891d036bb502feb25684276 # v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  quality-gate:
    uses: devxp-tech/.github/.github/workflows/sonarqube.yaml@main
    secrets: inherit
    needs:
      - env
      - yaml-linter
      - kube-linter
      - secret-find
      # - datree-check
      - trivy-scan

  notify:
    uses: devxp-tech/.github/.github/workflows/notify.yaml@main
    if: always()
    secrets: inherit
    needs:
      - env
      - yaml-linter
      - kube-linter
      - secret-find
      # - datree-check
      - quality-gate
      - trivy-scan
