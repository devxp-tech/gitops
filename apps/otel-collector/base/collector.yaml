apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: observability
spec:
  mode: statefulset
  replicas: 1
  config: |
    extensions:
      health_check:
      pprof:
      zpages:
    receivers:
      jaeger:
        protocols:
          grpc:
          thrift_http:
          thrift_compact:
      otlp:
        protocols:
          grpc:
          http:
      zipkin:

    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 5000
        timeout: 10s

    connectors:
      spanmetrics:
        # histogram:
        #   unit: s
        # namespace: traces.spanmetrics
        # metrics_flush_interval: 60s
      servicegraph:
        store:
          ttl: 30s
          max_items: 50

    exporters:
      logging:
        loglevel: info
      otlp/tempo:
        endpoint: "tempo.observability.svc:4317"
        tls:
          insecure: true
      # prometheus:
      #   endpoint: "0.0.0.0:8889"

      # prometheusremotewrite:
      #   endpoint: http://prometheus-community-kube-prometheus.monitoring.svc:9090/api/v1/write
      #   tls:
      #     insecure: true
      #   target_info:
      #     enabled: true

    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        metrics:
          receivers: [otlp, servicegraph]
          processors: [memory_limiter, batch]
          exporters: [logging] #prometheus
        traces:
          receivers: [jaeger, otlp, zipkin]
          processors: [memory_limiter, batch]
          exporters: [logging, otlp/tempo, spanmetrics, servicegraph]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [logging]
        metrics/spanmetrics:
          receivers: [spanmetrics]
          #exporters: [prometheus]
