apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: observability
spec:
  mode: deployment
  config: |
    extensions:
      health_check:
      pprof:
      zpages:
    receivers:
      jaeger:
        protocols:
          grpc:
          thrift_http:
          thrift_compact:
      otlp:
        protocols:
          grpc:
          http:
      zipkin:

    connectors:
      servicegraph:
        latency_histogram_buckets: [100ms, 250ms, 1s, 5s, 10s]
        dimensions:
          - dimension-1
          - dimension-2
        store:
          ttl: 1s
          max_items: 10

    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 10000
        timeout: 10s


    exporters:
      logging:
      # otlphttp:
      #   endpoint: http://tempo.observability.svc.cluster.local:4318
      #   tls:
      #     insecure: true
      otlp/tempo:
        endpoint: "tempo.observability.svc:4317"
        tls:
          insecure: true
      prometheus/servicegraph:
        endpoint: prometheus-prometheus.monitoring.svc:9090
        namespace: servicegraph

    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        traces:
          receivers: [jaeger, otlp, zipkin]
          processors: [memory_limiter, batch]
          exporters: [servicegraph, logging, otlp/tempo]
        metrics:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [logging]
        metrics/servicegraph:
          receivers: [servicegraph]
          exporters: [prometheus/servicegraph]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [logging]
