apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ../../base
helmCharts:
  - name: loki
    includeCRDs: true
    releaseName: loki
    namespace: logging
    version: 6.6.4 #2.9.11
    repo: https://grafana.github.io/helm-charts
    valuesInline:
      deploymentMode: Distributed
      serviceAccount:
        name: loki
        annotations:
          "eks.amazonaws.com/role-arn": "arn:aws:iam::239468932737:role/loki-lgseksd1-sa"
        automountServiceAccountToken: true
      # Disable helm-test
      test:
        enabled: false
      # Disable Loki-canary
      lokiCanary:
        enabled: false
      # Disable chunk cache
      chunksCache:
        enabled: false
      # Disable result cache
      resultsCache:
        enabled: false
      # Enable self-monitoring
      monitoring:
        serviceMonitor:
          enabled: true
        dashboards:
          enabled: true
          namespace: monitoring
        # Disable self-monitoring
        selfMonitoring:
          enabled: false
          grafanaAgent:
            installOperator: false
      ingester:
        replicas: 1
        extraEnv:
          - name: JAEGER_AGENT_HOST
            value: otel-collector.observability.svc.cluster.local
          - name: JAEGER_AGENT_PORT
            value: "6831"
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
      querier:
        replicas: 1
        extraEnv:
          - name: JAEGER_AGENT_HOST
            value: otel-collector.observability.svc.cluster.local
          - name: JAEGER_AGENT_PORT
            value: "6831"
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
      queryFrontend:
        replicas: 1
        extraEnv:
          - name: JAEGER_AGENT_HOST
            value: otel-collector.observability.svc.cluster.local
          - name: JAEGER_AGENT_PORT
            value: "6831"
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
      queryScheduler:
        replicas: 1
        extraEnv:
          - name: JAEGER_AGENT_HOST
            value: otel-collector.observability.svc.cluster.local
          - name: JAEGER_AGENT_PORT
            value: "6831"
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
      distributor:
        replicas: 1
        extraEnv:
          - name: JAEGER_AGENT_HOST
            value: otel-collector.observability.svc.cluster.local
          - name: JAEGER_AGENT_PORT
            value: "6831"
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
      compactor:
        replicas: 1
        extraEnv:
          - name: JAEGER_AGENT_HOST
            value: otel-collector.observability.svc.cluster.local
          - name: JAEGER_AGENT_PORT
            value: "6831"
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
      indexGateway:
        replicas: 1
        extraEnv:
          - name: JAEGER_AGENT_HOST
            value: otel-collector.observability.svc.cluster.local
          - name: JAEGER_AGENT_PORT
            value: "6831"
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"

      bloomCompactor:
        replicas: 0
      bloomGateway:
        replicas: 0

      backend:
        replicas: 0
      read:
        replicas: 0
      write:
        replicas: 0
      singleBinary:
        replicas: 0

      # Ruler config
      ruler:
        enabled: true
        replicas: 1
        extraEnv:
          - name: JAEGER_AGENT_HOST
            value: otel-collector.observability.svc.cluster.local
          - name: JAEGER_AGENT_PORT
            value: "6831"
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
        directories:
          fake:
            rules.yml: |
              groups:
                - name: test_alert
                  rules:
                    - alert: TestAlert
                      expr: sum(rate({app="loki"} | logfmt | level="info"[1m])) by (container) > 0
                      for: 1m
                      labels:
                          severity: warning
                      annotations:
                          summary: Loki info warning per minute rate > 0
                          message: 'Loki warning per minute rate > 0 container:"{{ $labels.container }}"'

                - name: high_error_rate
                  rules:
                    - alert: BackstageHighErrorRate
                      expr: sum(rate({app="backstage"} | logfmt | level="info"[1m])) by (container) > 0
                      for: 1m
                      labels:
                          severity: critical
                      annotations:
                          summary: Backstage error per minute rate > 100
                          message: 'Backstage warning per minute rate > 0 container:"{{ $labels.container }}"'

                    - alert: HotrodHighErrorRate
                      expr: sum(rate({app="hotrod"} | logfmt | level="error"[1m])) by (container) > 0
                      for: 1m
                      labels:
                          severity: critical
                      annotations:
                          summary: Hotrod error per minute rate > 100
                          message: 'Hotrod warning per minute rate > 0 container:"{{ $labels.container }}"'

      loki:
        # Disable multi-tenant support
        auth_enabled: false

        # Common config
        commonConfig:
          replication_factor: 1

        # Ingester config
        ingester:
          chunk_idle_period: 2h
          chunk_target_size: 1536000
          max_chunk_age: 2h
          chunk_encoding: snappy

        # limits config
        limits_config:
          max_cache_freshness_per_query: 10m
          max_query_parallelism: 8
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          split_queries_by_interval: 15m
          per_stream_rate_limit: 5MB
          per_stream_rate_limit_burst: 20MB
          ingestion_rate_mb: 20
          ingestion_burst_size_mb: 30
          max_entries_limit_per_query: 100000
          query_timeout: 300s
          retention_period: 7d

        # querier config
        querier:
          engine:
            max_look_back_period: 300
          max_concurrent: 16

        # query_scheduler config
        query_scheduler:
          max_outstanding_requests_per_tenant: 32768

        # ruler config
        rulerConfig:
          storage:
            type: local
            local:
              directory: /etc/loki/rules
          alertmanager_url: http://prometheus-community-kube-alertmanager.monitoring.svc.cluster.local:9093
          wal:
            dir: /var/loki/loki-wal
          external_url: "https://alertmanager.devxp-tech.io"
          enable_alertmanager_v2: true
          enable_api: true
          remote_write:
            enabled: true
            clients:
              local:
                url: http://mimir-nginx.monitoring.svc.cluster.local:80/api/v1/push
                queue_config:
                  # send immediately as soon as a sample is generated
                  capacity: 1
                  batch_send_deadline: 0s

        # S3 backend storage configuration
        storage:
          type: s3
          s3ForcePathStyle: true
          s3:
            region: us-east-1
          bucketNames:
            chunks: "vex-dev-loki-logs"
            # ruler: "vex-dev-loki-logs"
            # admin: "vex-dev-loki-logs"

        # Storage Schema
        schemaConfig:
          configs:
            - from: "2024-04-01"
              index:
                period: 24h
                prefix: index_
              object_store: s3
              schema: v13
              store: tsdb

        # Enable Tracing
        tracing:
          enabled: true
