apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: tracing
helmCharts:
  - name: opentelemetry-collector
    includeCRDs: true
    releaseName: open-telemetry
    version: 0.73.1
    repo: https://open-telemetry.github.io/opentelemetry-helm-charts
    valuesInline:
      mode: deployment
      fullnameOverride: opentelemetry-collector
      presets:
        hostMetrics:
          enabled: true
      serviceMonitor:
        enabled: true
      ports:
        metrics:
          enabled: true
      config:
        extensions:
          health_check: {}
          pprof: {}
          zpages: {}

        receivers:
          otlp:
            protocols:
              grpc:
                endpoint: ${env:MY_POD_IP}:4317
              http:
                endpoint: ${env:MY_POD_IP}:4318
          # Dummy receiver that's never used, because a pipeline is required to have one.
          otlp/spanmetrics:
            protocols:
              grpc:
                endpoint: "localhost:12345"
          prometheus:
            config:
              scrape_configs:
                - job_name: "span_job"
                  scrape_interval: 10s
                  static_configs:
                    - targets: ["0.0.0.0:8889"]
                - job_name: "otelcol"
                  scrape_interval: 10s
                  static_configs:
                    - targets: ["0.0.0.0:8888"]
                  metric_relabel_configs:
                    - source_labels: [__name__]
                      regex: ".*grpc_io.*"
                      action: drop

          zipkin:
            endpoint: ${MY_POD_IP}:9411

        processors:
          batch: {}
          spanmetrics:
            metrics_exporter: prometheus
            latency_histogram_buckets:
              [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
            dimensions:
              - name: http.method
                default: GET
              - name: http.status_code
            dimensions_cache_size: 1000

        exporters:
          otlp/jaeger:
            endpoint: "jaeger-collector.observability.svc:4317"
            tls:
              insecure: true
          # prometheus:
          #   enable_open_metrics: true
          #   endpoint: 0.0.0.0:9464
          #   resource_to_telemetry_conversion:
          #     enabled: true
          prometheusremotewrite:
            endpoint: http://prometheus-prometheus-pushgateway.monitoring.svc.cluster.local:9091/api/v1/write
            external_labels:
              job: opentelemetry-collectors
              cluster: dev

        service:
          extensions: [pprof, zpages, health_check]
          pipelines:
            traces:
              receivers: [otlp, jaeger, zipkin]
              processors: [batch, spanmetrics]
              exporters: [otlp/jaeger]
            metrics:
              receivers: [otlp, prometheus]
              exporters: [prometheusremotewrite]
            metrics/spanmetrics:
              receivers: [otlp/spanmetrics]
              exporters: [prometheus]
