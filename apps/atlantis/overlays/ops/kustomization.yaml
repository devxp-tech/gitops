apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ../../base
  - secrets.yaml
  - virtual-service.yaml
helmCharts:
  - name: atlantis
    includeCRDs: true
    releaseName: atlantis
    version: 5.1.3
    repo: https://runatlantis.github.io/helm-charts
    valuesInline:
      nameOverride: atlantis
      # tolerations:
      #   - key: "role"
      #     operator: "Equal"
      #     value: "on-demand"
      #     effect: "NoSchedule"
      # nodeSelector:
      #   role: "on-demand"
      atlantisUrl: https://atlantis.devxp-tech.io
      orgAllowlist: github.com/devxp-tech/*
      github:
        secret: github-secrets
        user: atlantis #diegoluisi
      basicAuthSecretName: basic-auth
      vcsSecretName: github-secrets
      ingress:
        enabled: false
      # initConfig:
      #   # -- Install providers/plugins into a path shared with the Atlantis pod.
      #   enabled: true
      #   image: alpine:latest
      #   imagePullPolicy: IfNotPresent
      #   # -- SharedDir is set as env var INIT_SHARED_DIR.
      #   sharedDir: /plugins
      #   sharedDirReadOnly: true
      #   workDir: /tmp
      #   # -- Size for the shared volume.
      #   sizeLimit: 100Mi
      #   # -- Security context for the container.
      #   containerSecurityContext: {}
      #   # -- Script to run on the init container.
      #   # @default -- Check values.yaml.
      #   script: |
      #     #!/bin/sh
      #     set -eoux pipefail

      #     # example for terragrunt
      #     TG_VERSION="v0.47.0"
      #     TG_SHA256_SUM="98d45f6bfbfae84b51364c1ad6920f09ecb4d834908b0535e4e331a9fc6fc75b"
      #     TG_FILE="${INIT_SHARED_DIR}/terragrunt"
      #     wget https://github.com/gruntwork-io/terragrunt/releases/download/${TG_VERSION}/terragrunt_linux_amd64 -O "${TG_FILE}"
      #     echo "${TG_SHA256_SUM}  ${TG_FILE}" | sha256sum -c
      #     chmod 755 "${TG_FILE}"
      #     terragrunt -v

      #     # example for terragrunt-atlantis-config
      #     TAC_VERSION="1.16.0" # without v
      #     TAC_SHA256_SUM="fc3b069cf4ae51e9b7a7d01f09862d1974b260fffb3ec857d661d7b1756fe26f"
      #     TAC_FILE="${INIT_SHARED_DIR}/terragrunt-atlantis-config"
      #     wget "https://github.com/transcend-io/terragrunt-atlantis-config/releases/download/v${TAC_VERSION}/terragrunt-atlantis-config_${TAC_VERSION}_linux_amd64.tar.gz"
      #     echo "${TAC_SHA256_SUM}  terragrunt-atlantis-config_${TAC_VERSION}_linux_amd64.tar.gz" | sha256sum -c
      #     tar xf "terragrunt-atlantis-config_${TAC_VERSION}_linux_amd64.tar.gz"
      #     cp -fv "terragrunt-atlantis-config_${TAC_VERSION}_linux_amd64/terragrunt-atlantis-config_${TAC_VERSION}_linux_amd64" "${TAC_FILE}"
      #     chmod 755 "${TG_FILE}"
      #     terragrunt-atlantis-config version
      image:
        repository: ghcr.io/devxp-tech/tf-env/atlantis
        tag: v0.27.2
      imagePullSecrets:
        - ghcr-secret
      # ref: https://www.runatlantis.io/docs/server-side-repo-config.html
      # Example default configuration
      repoConfig: |
        ---
        repos:
        - id: "/.*/"
          apply_requirements: [mergeable]
          allow_custom_workflows: true
          workflow: terragrunt
          delete_source_branch_on_merge: true
          allowed_overrides: [apply_requirements, workflow, delete_source_branch_on_merge]
        workflows:
          terragrunt:
            plan:
              steps:
              - env:
                  # Reduce Terraform suggestion output
                  name: TF_IN_AUTOMATION
                  value: 'true'
              - run: |
                  terragrunt init -upgrade
              - run:
                  # Allow for targetted plans/applies as not supported for Terraform wrappers by default
                  command: terragrunt run-all plan -input=false $(printf '%s' $COMMENT_ARGS | sed 's/,/ /g' | tr -d '\\') -no-color -out $PLANFILE
                  output: hide
              - run: |
                  terragrunt show $PLANFILE
            apply:
              steps:
              - env:
                  # Reduce Terraform suggestion output
                  name: TF_IN_AUTOMATION
                  value: 'true'
              - run: |
                  terragrunt init -upgrade
              - run: |
                  terragrunt run-all apply --terragrunt-non-interactive -input=false $PLANFILE
        metrics:
          prometheus:
            endpoint: /metrics

      # Use Diff Markdown Format for color coding diffs
      enableDiffMarkdownFormat: true

      commonLabels:
        app.kubernetes.io/name: atlantis
        app.kubernetes.io/instance: atlantis

      service:
        type: ClusterIP
        # port: 80
        targetPort: 4141
        # loadBalancerIP: null

      resources:
        requests:
          memory: 128Mi
          cpu: 20m
        limits:
          memory: 256Mi
          cpu: 80m

      volumeClaim:
        enabled: true
        dataStorage: 10Gi

      environment:
        ATLANTIS_DEFAULT_TF_VERSION: v1.3.8
        ATLANTIS_WRITE_GIT_CREDS: "true"
        TF_IN_AUTOMATION: "true"
        # ATLANTIS_GH_APP_KEY_FILE: /config/github.pem

      containerSecurityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true

      servicemonitor:
        enabled: true

      readinessProbe:
        periodSeconds: 5
        initialDelaySeconds: 10

      serviceAccount:
        create: true
        mount: true
        name: atlantis
        annotations:
          eks.amazonaws.com/role-arn: arn:aws:iam::239468932737:role/atlantis-vex-dev-usea1-eks-sa
