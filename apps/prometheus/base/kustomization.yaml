apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: monitoring
helmCharts:
  - name: prometheus
    releaseName: prometheus
    version: 22.6.6
    repo: https://prometheus-community.github.io/helm-charts
    includeCRDs: true
    valuesInline:
      kube-state-metrics:
        enabled: false
      alertmanager:
        extraSecretMounts:
          - name: slack-api-url
            mountPath: /etc/secrets/
            # subPath: "slack_api_url_file.txt"
            secretName: alertmanager-secret
            readOnly: true
        config:
          global:
            resolve_timeout: 5m
            slack_api_url_file: "/etc/secrets/SLACK-TOKEN"
            external_labels:
              cluster_id: lgseksd1 # Each cluster should have a unique ID
          route:
            # When a new group of alerts is created by an incoming alert, wait at
            # least 'group_wait' to send the initial notification.
            # This way ensures that you get multiple alerts for the same group that start
            # firing shortly after another are batched together on the first
            # notification.
            group_wait: 30s

            # When the first notification was sent, wait 'group_interval' to send a batch
            # of new alerts that started firing for that group.
            group_interval: 5m

            # If an alert has successfully been sent, wait 'repeat_interval' to
            # resend them.
            repeat_interval: 8h
            group_by: ["alertname", "cluster", "service"]

            # A default receiver
            receiver: "slack-notifications"
            routes:
              # capture All Critical to the 'slack-notifications'
              - match:
                  severity: "critical"
                continue: true
                receiver: "slack-notifications"
            # - match:
            #     team: 'sre-team'
            #   continue: true
            #   receiver: 'sre-team-alerts'

          receivers:
            - name: "slack-notifications"
              slack_configs:
                - channel: "#prometheus-notifications"
                  color: '{{ template "slack.color" . }}'
                  title: '{{ template "slack.title" . }}'
                  text: '{{ template "slack.text" . }}'
                  send_resolved: true
                  actions:
                    - type: button
                      text: "Runbook :green_book:"
                      url: "{{ (index .Alerts 0).Annotations.runbook_url }}"
                    - type: button
                      text: "Query :mag:"
                      url: "{{ (index .Alerts 0).GeneratorURL }}"
                    - type: button
                      text: "Dashboard :chart_with_upwards_trend:"
                      url: "{{ (index .Alerts 0).Annotations.dashboard_url }}"
                    - type: button
                      text: "Silence :no_bell:"
                      url: '{{ template "__alert_silence_link" . }}'

          # - name: 'sre-team-alerts'
          #   slack_configs:
          #   - channel: '#sre-team-alerts'
          #     color: '{{ template "slack.color" . }}'
          #     title: '{{ template "slack.title" . }}'
          #     team: '{{ template "slack.team" . }}'
          #     text: '{{ template "slack.text" . }}'
          #     send_resolved: true
          #     actions:
          #       - type: button
          #         text: 'Runbook :green_book:'
          #         url: '{{ (index .Alerts 0).Annotations.runbook_url }}'
          #       - type: button
          #         text: 'Query :mag:'
          #         url: '{{ (index .Alerts 0).GeneratorURL }}'
          #       - type: button
          #         text: 'Dashboard :chart_with_upwards_trend:'
          #         url: '{{ (index .Alerts 0).Annotations.dashboard_url }}'
          #       - type: button
          #         text: 'Silence :no_bell:'
          #         url: '{{ template "__alert_silence_link" . }}'

        templates:
          alertmanager.tmpl: |-
            {{/* Alertmanager Silence link */}}
            {{ define "__alert_silence_link" -}}
                {{ .ExternalURL }}/#/silences/new?filter=%7B
                {{- range .CommonLabels.SortedPairs -}}
                    {{- if ne .Name "alertname" -}}
                        {{- .Name }}%3D"{{- .Value -}}"%2C%20
                    {{- end -}}
                {{- end -}}
                alertname%3D"{{- .CommonLabels.alertname -}}"%7D
            {{- end }}

            {{/* Severity of the alert */}}
            {{ define "__alert_severity" -}}
                {{- if eq .CommonLabels.severity "critical" -}}
                *Severity:* `Critical`
                {{- else if eq .CommonLabels.severity "warning" -}}
                *Severity:* `Warning`
                {{- else if eq .CommonLabels.severity "info" -}}
                *Severity:* `Info`
                {{- else -}}
                *Severity:* :question: {{ .CommonLabels.severity }}
                {{- end }}
            {{- end }}

            {{/* Title of the Slack Team */}}
            {{ define "slack.team" -}}
              [{{ .Status | toUpper -}}
              ] {{ .CommonLabels.team }}
            {{- end }}

            {{/* Title of the Slack alert */}}
            {{ define "slack.title" -}}
              [{{ .Status | toUpper -}}
              {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
              ] {{ .CommonLabels.alertname }}
            {{- end }}


            {{/* Color of Slack attachment (appears as line next to alert )*/}}
            {{ define "slack.color" -}}
                {{ if eq .Status "firing" -}}
                    {{ if eq .CommonLabels.severity "warning" -}}
                        warning
                    {{- else if eq .CommonLabels.severity "critical" -}}
                        danger
                    {{- else -}}
                        #439FE0
                    {{- end -}}
                {{ else -}}
                good
                {{- end }}
            {{- end }}

            {{/* The text to display in the alert */}}
            {{ define "slack.text" -}}

                {{ template "__alert_severity" . }}
                {{- if (index .Alerts 0).Annotations.summary }}
                {{- "\n" -}}
                *Summary:* {{ (index .Alerts 0).Annotations.summary }}
                {{- end }}

                {{ range .Alerts }}

                    {{- if .Annotations.description }}
                    {{- "\n" -}}
                    {{ .Annotations.description }}
                    {{- "\n" -}}
                    {{- end }}
                    {{- if .Annotations.message }}
                    {{- "\n" -}}
                    {{ .Annotations.message }}
                    {{- "\n" -}}
                    {{- end }}

                {{- end }}

            {{- end }}

      server:
        alertmanagers:
          - scheme: http
            static_configs:
              - targets:
                  - "prometheus-alertmanager.monitoring:9093"
        resources:
          requests:
            cpu: 100m
            memory: 4049Mi
          limits:
            cpu: 1
            memory: 5120Mi
        persistentVolume:
          size: "30Gi"
        retention: "7d"
      serverFiles:
        alerting_rules.yml:
          groups:
            #### Prometheus Alerts
            - name: PrometheusSelfMonitoring
              rules:
                - alert: PrometheusJobMissing
                  expr: 'absent(up{job="prometheus"})'
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus job missing (instance {{ $labels.instance }})
                    description: "A Prometheus job has disappeared\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTargetMissing
                  expr: "up == 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus target missing (instance {{ $labels.instance }})
                    description: "A Prometheus target has disappeared. An exporter might be crashed.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusAllTargetsMissing
                  expr: "sum by (job) (up) == 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus all targets missing (instance {{ $labels.instance }})
                    description: "A Prometheus job does not have living target anymore.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTargetMissingWithWarmupTime
                  expr: "sum by (instance, job) ((up == 0) * on (instance) group_right(job) (node_time_seconds - node_boot_time_seconds > 600))"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus target missing with warmup time (instance {{ $labels.instance }})
                    description: "Allow a job time to start up (10 minutes) before alerting that it's down.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusConfigurationReloadFailure
                  expr: "prometheus_config_last_reload_successful != 1"
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus configuration reload failure (instance {{ $labels.instance }})
                    description: "Prometheus configuration reload error\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTooManyRestarts
                  expr: 'changes(process_start_time_seconds{job=~"prometheus|pushgateway|alertmanager"}[15m]) > 2'
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus too many restarts (instance {{ $labels.instance }})
                    description: "Prometheus has restarted more than twice in the last 15 minutes. It might be crashlooping.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusAlertmanagerJobMissing
                  expr: 'absent(up{job="alertmanager"})'
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus AlertManager job missing (instance {{ $labels.instance }})
                    description: "A Prometheus AlertManager job has disappeared\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusAlertmanagerConfigurationReloadFailure
                  expr: "alertmanager_config_last_reload_successful != 1"
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus AlertManager configuration reload failure (instance {{ $labels.instance }})
                    description: "AlertManager configuration reload error\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusAlertmanagerConfigNotSynced
                  expr: 'count(count_values("config_hash", alertmanager_config_hash)) > 1'
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus AlertManager config not synced (instance {{ $labels.instance }})
                    description: "Configurations of AlertManager cluster instances are out of sync\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusAlertmanagerE2eDeadManSwitch
                  expr: "vector(1)"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus AlertManager E2E dead man switch (instance {{ $labels.instance }})
                    description: "Prometheus DeadManSwitch is an always-firing alert. It's used as an end-to-end test of Prometheus through the Alertmanager.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusNotConnectedToAlertmanager
                  expr: "prometheus_notifications_alertmanagers_discovered < 1"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus not connected to alertmanager (instance {{ $labels.instance }})
                    description: "Prometheus cannot connect the alertmanager\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusRuleEvaluationFailures
                  expr: "increase(prometheus_rule_evaluation_failures_total[3m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus rule evaluation failures (instance {{ $labels.instance }})
                    description: "Prometheus encountered {{ $value }} rule evaluation failures, leading to potentially ignored alerts.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTemplateTextExpansionFailures
                  expr: "increase(prometheus_template_text_expansion_failures_total[3m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus template text expansion failures (instance {{ $labels.instance }})
                    description: "Prometheus encountered {{ $value }} template text expansion failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusRuleEvaluationSlow
                  expr: "prometheus_rule_group_last_duration_seconds > prometheus_rule_group_interval_seconds"
                  for: 5m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus rule evaluation slow (instance {{ $labels.instance }})
                    description: "Prometheus rule evaluation took more time than the scheduled interval. It indicates a slower storage backend access or too complex query.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusNotificationsBacklog
                  expr: "min_over_time(prometheus_notifications_queue_length[10m]) > 0"
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus notifications backlog (instance {{ $labels.instance }})
                    description: "The Prometheus notification queue has not been empty for 10 minutes\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusAlertmanagerNotificationFailing
                  expr: "rate(alertmanager_notifications_failed_total[1m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus AlertManager notification failing (instance {{ $labels.instance }})
                    description: "Alertmanager is failing sending notifications\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTargetEmpty
                  expr: "prometheus_sd_discovered_targets == 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus target empty (instance {{ $labels.instance }})
                    description: "Prometheus has no target in service discovery\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTargetScrapingSlow
                  expr: 'prometheus_target_interval_length_seconds{quantile="0.9"} / on (interval, instance, job) prometheus_target_interval_length_seconds{quantile="0.5"} > 1.05'
                  for: 5m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus target scraping slow (instance {{ $labels.instance }})
                    description: "Prometheus is scraping exporters slowly since it exceeded the requested interval time. Your Prometheus server is under-provisioned.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusLargeScrape
                  expr: "increase(prometheus_target_scrapes_exceeded_sample_limit_total[10m]) > 10"
                  for: 5m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus large scrape (instance {{ $labels.instance }})
                    description: "Prometheus has many scrapes that exceed the sample limit\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTargetScrapeDuplicate
                  expr: "increase(prometheus_target_scrapes_sample_duplicate_timestamp_total[5m]) > 0"
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus target scrape duplicate (instance {{ $labels.instance }})
                    description: "Prometheus has many samples rejected due to duplicate timestamps but different values\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTsdbCheckpointCreationFailures
                  expr: "increase(prometheus_tsdb_checkpoint_creations_failed_total[1m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus TSDB checkpoint creation failures (instance {{ $labels.instance }})
                    description: "Prometheus encountered {{ $value }} checkpoint creation failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTsdbCheckpointDeletionFailures
                  expr: "increase(prometheus_tsdb_checkpoint_deletions_failed_total[1m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus TSDB checkpoint deletion failures (instance {{ $labels.instance }})
                    description: "Prometheus encountered {{ $value }} checkpoint deletion failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTsdbCompactionsFailed
                  expr: "increase(prometheus_tsdb_compactions_failed_total[1m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus TSDB compactions failed (instance {{ $labels.instance }})
                    description: "Prometheus encountered {{ $value }} TSDB compactions failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTsdbHeadTruncationsFailed
                  expr: "increase(prometheus_tsdb_head_truncations_failed_total[1m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus TSDB head truncations failed (instance {{ $labels.instance }})
                    description: "Prometheus encountered {{ $value }} TSDB head truncation failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTsdbReloadFailures
                  expr: "increase(prometheus_tsdb_reloads_failures_total[1m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus TSDB reload failures (instance {{ $labels.instance }})
                    description: "Prometheus encountered {{ $value }} TSDB reload failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTsdbWalCorruptions
                  expr: "increase(prometheus_tsdb_wal_corruptions_total[1m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus TSDB WAL corruptions (instance {{ $labels.instance }})
                    description: "Prometheus encountered {{ $value }} TSDB WAL corruptions\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTsdbWalTruncationsFailed
                  expr: "increase(prometheus_tsdb_wal_truncations_failed_total[1m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Prometheus TSDB WAL truncations failed (instance {{ $labels.instance }})
                    description: "Prometheus encountered {{ $value }} TSDB WAL truncation failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PrometheusTimeserieCardinality
                  expr: 'label_replace(count by(__name__) ({__name__=~".+"}), "name", "$1", "__name__", "(.+)") > 10000'
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Prometheus timeserie cardinality (instance {{ $labels.instance }})
                    description: "The \"{{ $labels.name }}\" timeserie cardinality is getting very high: {{ $value }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

            #### Node Exporter Alerts
            - name: NodeExporter
              rules:
                - alert: HostOutOfMemory
                  expr: "node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host out of memory (instance {{ $labels.instance }})
                    description: "Node memory is filling up (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostMemoryUnderMemoryPressure
                  expr: "rate(node_vmstat_pgmajfault[1m]) > 1000"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host memory under memory pressure (instance {{ $labels.instance }})
                    description: "The node is under heavy memory pressure. High rate of major page faults\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostMemoryIsUnderUtilized
                  expr: "100 - (rate(node_memory_MemAvailable_bytes[30m]) / node_memory_MemTotal_bytes * 100) < 20"
                  for: 1w
                  labels:
                    severity: info
                    team: sre-team
                  annotations:
                    summary: Host Memory is under utilized (instance {{ $labels.instance }})
                    description: "Node memory is < 20% for 1 week. Consider reducing memory space.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostUnusualNetworkThroughputIn
                  expr: "sum by (instance) (rate(node_network_receive_bytes_total[2m])) / 1024 / 1024 > 100"
                  for: 5m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host unusual network throughput in (instance {{ $labels.instance }})
                    description: "Host network interfaces are probably receiving too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostUnusualNetworkThroughputOut
                  expr: "sum by (instance) (rate(node_network_transmit_bytes_total[2m])) / 1024 / 1024 > 100"
                  for: 5m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host unusual network throughput out (instance {{ $labels.instance }})
                    description: "Host network interfaces are probably sending too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostUnusualDiskReadRate
                  expr: "sum by (instance) (rate(node_disk_read_bytes_total[2m])) / 1024 / 1024 > 50"
                  for: 5m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host unusual disk read rate (instance {{ $labels.instance }})
                    description: "Disk is probably reading too much data (> 50 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostUnusualDiskWriteRate
                  expr: "sum by (instance) (rate(node_disk_written_bytes_total[2m])) / 1024 / 1024 > 50"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host unusual disk write rate (instance {{ $labels.instance }})
                    description: "Disk is probably writing too much data (> 50 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostOutOfDiskSpace
                  expr: "(node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host out of disk space (instance {{ $labels.instance }})
                    description: "Disk is almost full (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostDiskWillFillIn24Hours
                  expr: '(node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) predict_linear(node_filesystem_avail_bytes{fstype!~"tmpfs"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly == 0'
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host disk will fill in 24 hours (instance {{ $labels.instance }})
                    description: "Filesystem is predicted to run out of space within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostOutOfInodes
                  expr: "node_filesystem_files_free / node_filesystem_files * 100 < 10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host out of inodes (instance {{ $labels.instance }})
                    description: "Disk is almost running out of available inodes (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostInodesWillFillIn24Hours
                  expr: "node_filesystem_files_free / node_filesystem_files * 100 < 10 and predict_linear(node_filesystem_files_free[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly == 0"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host inodes will fill in 24 hours (instance {{ $labels.instance }})
                    description: "Filesystem is predicted to run out of inodes within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostUnusualDiskReadLatency
                  expr: "rate(node_disk_read_time_seconds_total[1m]) / rate(node_disk_reads_completed_total[1m]) > 0.1 and rate(node_disk_reads_completed_total[1m]) > 0"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host unusual disk read latency (instance {{ $labels.instance }})
                    description: "Disk latency is growing (read operations > 100ms)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostUnusualDiskWriteLatency
                  expr: "rate(node_disk_write_time_seconds_total[1m]) / rate(node_disk_writes_completed_total[1m]) > 0.1 and rate(node_disk_writes_completed_total[1m]) > 0"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host unusual disk write latency (instance {{ $labels.instance }})
                    description: "Disk latency is growing (write operations > 100ms)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostHighCpuLoad
                  expr: '100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80'
                  for: 0m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host high CPU load (instance {{ $labels.instance }})
                    description: "CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostCpuIsUnderUtilized
                  expr: '100 - (rate(node_cpu_seconds_total{mode="idle"}[30m]) * 100) < 20'
                  for: 1w
                  labels:
                    severity: info
                    team: sre-team
                  annotations:
                    summary: Host CPU is under utilized (instance {{ $labels.instance }})
                    description: "CPU load is < 20% for 1 week. Consider reducing the number of CPUs.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostCpuStealNoisyNeighbor
                  expr: 'avg by(instance) (rate(node_cpu_seconds_total{mode="steal"}[5m])) * 100 > 10'
                  for: 0m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host CPU steal noisy neighbor (instance {{ $labels.instance }})
                    description: "CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostCpuHighIowait
                  expr: 'avg by (instance) (rate(node_cpu_seconds_total{mode="iowait"}[5m])) * 100 > 5'
                  for: 0m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host CPU high iowait (instance {{ $labels.instance }})
                    description: "CPU iowait > 5%. A high iowait means that you are disk or network bound.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostContextSwitching
                  expr: '(rate(node_context_switches_total[5m])) / (count without(cpu, mode) (node_cpu_seconds_total{mode="idle"})) > 1000'
                  for: 0m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host context switching (instance {{ $labels.instance }})
                    description: "Context switching is growing on node (> 1000 / s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostSwapIsFillingUp
                  expr: "(1 - (node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes)) * 100 > 80"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host swap is filling up (instance {{ $labels.instance }})
                    description: "Swap is filling up (>80%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostSystemdServiceCrashed
                  expr: 'node_systemd_unit_state{state="failed"} == 1'
                  for: 0m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host systemd service crashed (instance {{ $labels.instance }})
                    description: "systemd service crashed\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostPhysicalComponentTooHot
                  expr: "node_hwmon_temp_celsius > 75"
                  for: 5m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host physical component too hot (instance {{ $labels.instance }})
                    description: "Physical hardware component too hot\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostNodeOvertemperatureAlarm
                  expr: "node_hwmon_temp_crit_alarm_celsius == 1"
                  for: 0m
                  labels:
                    severity: critical
                    team: sre-team
                  annotations:
                    summary: Host node overtemperature alarm (instance {{ $labels.instance }})
                    description: "Physical node temperature alarm triggered\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostRaidArrayGotInactive
                  expr: 'node_md_state{state="inactive"} > 0'
                  for: 0m
                  labels:
                    severity: critical
                    team: sre-team
                  annotations:
                    summary: Host RAID array got inactive (instance {{ $labels.instance }})
                    description: "RAID array {{ $labels.device }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostRaidDiskFailure
                  expr: 'node_md_disks{state="failed"} > 0'
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host RAID disk failure (instance {{ $labels.instance }})
                    description: "At least one device in RAID array on {{ $labels.instance }} failed. Array {{ $labels.md_device }} needs attention and possibly a disk swap\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostKernelVersionDeviations
                  expr: 'count(sum(label_replace(node_uname_info, "kernel", "$1", "release", "([0-9]+.[0-9]+.[0-9]+).*")) by (kernel)) > 1'
                  for: 6h
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host kernel version deviations (instance {{ $labels.instance }})
                    description: "Different kernel versions are running\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostOomKillDetected
                  expr: "increase(node_vmstat_oom_kill[1m]) > 0"
                  for: 0m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host OOM kill detected (instance {{ $labels.instance }})
                    description: "OOM kill detected\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostEdacCorrectableErrorsDetected
                  expr: "increase(node_edac_correctable_errors_total[1m]) > 0"
                  for: 0m
                  labels:
                    severity: info
                    team: sre-team
                  annotations:
                    summary: Host EDAC Correctable Errors detected (instance {{ $labels.instance }})
                    description: "Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} correctable memory errors reported by EDAC in the last 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostEdacUncorrectableErrorsDetected
                  expr: "node_edac_uncorrectable_errors_total > 0"
                  for: 0m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host EDAC Uncorrectable Errors detected (instance {{ $labels.instance }})
                    description: "Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} uncorrectable memory errors reported by EDAC in the last 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostNetworkReceiveErrors
                  expr: "rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host Network Receive Errors (instance {{ $labels.instance }})
                    description: "Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostNetworkTransmitErrors
                  expr: "rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host Network Transmit Errors (instance {{ $labels.instance }})
                    description: "Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostNetworkInterfaceSaturated
                  expr: '(rate(node_network_receive_bytes_total{device!~"^tap.*|^vnet.*|^veth.*|^tun.*"}[1m]) + rate(node_network_transmit_bytes_total{device!~"^tap.*|^vnet.*|^veth.*|^tun.*"}[1m])) / node_network_speed_bytes{device!~"^tap.*|^vnet.*|^veth.*|^tun.*"} > 0.8 < 10000'
                  for: 1m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host Network Interface Saturated (instance {{ $labels.instance }})
                    description: "The network interface \"{{ $labels.device }}\" on \"{{ $labels.instance }}\" is getting overloaded.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostNetworkBondDegraded
                  expr: "(node_bonding_active - node_bonding_slaves) != 0"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host Network Bond Degraded (instance {{ $labels.instance }})
                    description: "Bond \"{{ $labels.device }}\" degraded on \"{{ $labels.instance }}\".\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostConntrackLimit
                  expr: "node_nf_conntrack_entries / node_nf_conntrack_entries_limit > 0.8"
                  for: 5m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host conntrack limit (instance {{ $labels.instance }})
                    description: "The number of conntrack is approaching limit\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostClockSkew
                  expr: "(node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0)"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host clock skew (instance {{ $labels.instance }})
                    description: "Clock skew detected. Clock is out of sync. Ensure NTP is configured correctly on this host.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostClockNotSynchronising
                  expr: "min_over_time(node_timex_sync_status[1m]) == 0 and node_timex_maxerror_seconds >= 16"
                  for: 2m
                  labels:
                    severity: warning
                    team: sre-team
                  annotations:
                    summary: Host clock not synchronising (instance {{ $labels.instance }})
                    description: "Clock not synchronising. Ensure NTP is configured on this host.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: HostRequiresReboot
                  expr: "node_reboot_required > 0"
                  for: 4h
                  labels:
                    severity: info
                    team: sre-team
                  annotations:
                    summary: Host requires reboot (instance {{ $labels.instance }})
                    description: "{{ $labels.instance }} requires a reboot.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

            #### kube-state-metrics Alerts
            - name: KubestateExporter
              rules:
                - alert: KubernetesNodeReady
                  expr: 'kube_node_status_condition{condition="Ready",status="true"} == 0'
                  for: 10m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes Node ready (instance {{ $labels.instance }})
                    description: "Node {{ $labels.node }} has been unready for a long time\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesMemoryPressure
                  expr: 'kube_node_status_condition{condition="MemoryPressure",status="true"} == 1'
                  for: 2m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes memory pressure (instance {{ $labels.instance }})
                    description: "{{ $labels.node }} has MemoryPressure condition\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesDiskPressure
                  expr: 'kube_node_status_condition{condition="DiskPressure",status="true"} == 1'
                  for: 2m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes disk pressure (instance {{ $labels.instance }})
                    description: "{{ $labels.node }} has DiskPressure condition\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesNetworkUnavailable
                  expr: 'kube_node_status_condition{condition="NetworkUnavailable",status="true"} == 1'
                  for: 2m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes network unavailable (instance {{ $labels.instance }})
                    description: "{{ $labels.node }} has NetworkUnavailable condition\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                # - alert: KubernetesOutOfCapacity
                #   expr: 'sum by (node) ((kube_pod_status_phase{phase="Running"} == 1) + on(uid) group_left(node) (0 * kube_pod_info{pod_template_hash=""})) / sum by (node) (kube_node_status_allocatable{resource="pods"}) * 100 > 90'
                #   for: 2m
                #   labels:
                #     severity: warning
                #   annotations:
                #     summary: Kubernetes out of capacity (instance {{ $labels.instance }})
                #     description: "{{ $labels.node }} is out of capacity\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesContainerOomKiller
                  expr: '(kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1'
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes container oom killer (instance {{ $labels.instance }})
                    description: "Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesJobFailed
                  expr: "kube_job_status_failed > 0"
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes Job failed (instance {{ $labels.instance }})
                    description: "Job {{ $labels.namespace }}/{{ $labels.exported_job }} failed to complete\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesCronjobSuspended
                  expr: "kube_cronjob_spec_suspend != 0"
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes CronJob suspended (instance {{ $labels.instance }})
                    description: "CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is suspended\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesPersistentvolumeclaimPending
                  expr: 'kube_persistentvolumeclaim_status_phase{phase="Pending"} == 1'
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes PersistentVolumeClaim pending (instance {{ $labels.instance }})
                    description: "PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesVolumeOutOfDiskSpace
                  expr: "kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes * 100 < 10"
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes Volume out of disk space (instance {{ $labels.instance }})
                    description: "Volume is almost full (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesVolumeFullInFourDays
                  expr: "predict_linear(kubelet_volume_stats_available_bytes[6h], 4 * 24 * 3600) < 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes Volume full in four days (instance {{ $labels.instance }})
                    description: "{{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is expected to fill up within four days. Currently {{ $value | humanize }}% is available.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesPersistentvolumeError
                  expr: 'kube_persistentvolume_status_phase{phase=~"Failed|Pending", job="kube-state-metrics"} > 0'
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes PersistentVolume error (instance {{ $labels.instance }})
                    description: "Persistent volume is in bad state\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesStatefulsetDown
                  expr: "kube_statefulset_replicas != kube_statefulset_status_replicas_ready > 0"
                  for: 1m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes StatefulSet down (instance {{ $labels.instance }})
                    description: "A StatefulSet went down\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesHpaScalingAbility
                  expr: 'kube_horizontalpodautoscaler_status_condition{status="false", condition="AbleToScale"} == 1'
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes HPA scaling ability (instance {{ $labels.instance }})
                    description: "Pod is unable to scale\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesHpaMetricAvailability
                  expr: 'kube_horizontalpodautoscaler_status_condition{status="false", condition="ScalingActive"} == 1'
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes HPA metric availability (instance {{ $labels.instance }})
                    description: "HPA is not able to collect metrics\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesHpaScaleCapability
                  expr: "kube_horizontalpodautoscaler_status_desired_replicas >= kube_horizontalpodautoscaler_spec_max_replicas"
                  for: 2m
                  labels:
                    severity: info
                  annotations:
                    summary: Kubernetes HPA scale capability (instance {{ $labels.instance }})
                    description: "The maximum number of desired Pods has been hit\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesPodNotHealthy
                  expr: 'sum by (namespace, pod) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed"}) > 0'
                  for: 15m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes Pod not healthy (instance {{ $labels.instance }})
                    description: "Pod has been in a non-ready state for longer than 15 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesPodCrashLooping
                  expr: "increase(kube_pod_container_status_restarts_total[1m]) > 3"
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes pod crash looping (instance {{ $labels.instance }})
                    description: "Pod {{ $labels.pod }} is crash looping\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesReplicassetMismatch
                  expr: "kube_replicaset_spec_replicas != kube_replicaset_status_ready_replicas"
                  for: 10m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes ReplicasSet mismatch (instance {{ $labels.instance }})
                    description: "Deployment Replicas mismatch\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesDeploymentReplicasMismatch
                  expr: "kube_deployment_spec_replicas != kube_deployment_status_replicas_available"
                  for: 10m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes Deployment replicas mismatch (instance {{ $labels.instance }})
                    description: "Deployment Replicas mismatch\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesStatefulsetReplicasMismatch
                  expr: "kube_statefulset_status_replicas_ready != kube_statefulset_status_replicas"
                  for: 10m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes StatefulSet replicas mismatch (instance {{ $labels.instance }})
                    description: "A StatefulSet does not match the expected number of replicas.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesDeploymentGenerationMismatch
                  expr: "kube_deployment_status_observed_generation != kube_deployment_metadata_generation"
                  for: 10m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes Deployment generation mismatch (instance {{ $labels.instance }})
                    description: "A Deployment has failed but has not been rolled back.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesStatefulsetGenerationMismatch
                  expr: "kube_statefulset_status_observed_generation != kube_statefulset_metadata_generation"
                  for: 10m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes StatefulSet generation mismatch (instance {{ $labels.instance }})
                    description: "A StatefulSet has failed but has not been rolled back.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesStatefulsetUpdateNotRolledOut
                  expr: "max without (revision) (kube_statefulset_status_current_revision unless kube_statefulset_status_update_revision) * (kube_statefulset_replicas != kube_statefulset_status_replicas_updated)"
                  for: 10m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes StatefulSet update not rolled out (instance {{ $labels.instance }})
                    description: "StatefulSet update has not been rolled out.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesDaemonsetRolloutStuck
                  expr: "kube_daemonset_status_number_ready / kube_daemonset_status_desired_number_scheduled * 100 < 100 or kube_daemonset_status_desired_number_scheduled - kube_daemonset_status_current_number_scheduled > 0"
                  for: 10m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes DaemonSet rollout stuck (instance {{ $labels.instance }})
                    description: "Some Pods of DaemonSet are not scheduled or not ready\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesDaemonsetMisscheduled
                  expr: "kube_daemonset_status_number_misscheduled > 0"
                  for: 1m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes DaemonSet misscheduled (instance {{ $labels.instance }})
                    description: "Some DaemonSet Pods are running where they are not supposed to run\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesCronjobTooLong
                  expr: "time() - kube_cronjob_next_schedule_time > 3600"
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes CronJob too long (instance {{ $labels.instance }})
                    description: "CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more than 1h to complete.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesJobSlowCompletion
                  expr: "kube_job_spec_completions - kube_job_status_succeeded > 0"
                  for: 12h
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes job slow completion (instance {{ $labels.instance }})
                    description: "Kubernetes Job {{ $labels.namespace }}/{{ $labels.job_name }} did not complete in time.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesApiServerErrors
                  expr: 'sum(rate(apiserver_request_total{job="apiserver",code=~"^(?:5..)$"}[1m])) / sum(rate(apiserver_request_total{job="apiserver"}[1m])) * 100 > 3'
                  for: 2m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes API server errors (instance {{ $labels.instance }})
                    description: "Kubernetes API server is experiencing high error rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesApiClientErrors
                  expr: '(sum(rate(rest_client_requests_total{code=~"(4|5).."}[1m])) by (instance, job) / sum(rate(rest_client_requests_total[1m])) by (instance, job)) * 100 > 1'
                  for: 2m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes API client errors (instance {{ $labels.instance }})
                    description: "Kubernetes API client is experiencing high error rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesClientCertificateExpiresNextWeek
                  expr: 'apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 7*24*60*60'
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes client certificate expires next week (instance {{ $labels.instance }})
                    description: "A client certificate used to authenticate to the apiserver is expiring next week.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesClientCertificateExpiresSoon
                  expr: 'apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 24*60*60'
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Kubernetes client certificate expires soon (instance {{ $labels.instance }})
                    description: "A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: KubernetesApiServerLatency
                  expr: 'histogram_quantile(0.99, sum(rate(apiserver_request_latencies_bucket{subresource!="log",verb!~"^(?:CONNECT|WATCHLIST|WATCH|PROXY)$"} [10m])) WITHOUT (instance, resource)) / 1e+06 > 1'
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: Kubernetes API server latency (instance {{ $labels.instance }})
                    description: "Kubernetes API server has a 99th percentile latency of {{ $value }} seconds for {{ $labels.verb }} {{ $labels.resource }}.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

            #### Istio Alerts
            - name: Istio
              rules:
                - alert: IstioKubernetesGatewayAvailabilityDrop
                  expr: 'min(kube_deployment_status_replicas_available{deployment="istio-ingressgateway", namespace="istio-system"}) without (instance, pod) < 2'
                  for: 1m
                  labels:
                    severity: warning
                  annotations:
                    summary: Istio Kubernetes gateway availability drop (instance {{ $labels.instance }})
                    description: "Gateway pods have dropped. Inbound traffic will likely be affected.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: IstioPilotHighTotalRequestRate
                  expr: "sum(rate(pilot_xds_push_errors[1m])) / sum(rate(pilot_xds_pushes[1m])) * 100 > 5"
                  for: 1m
                  labels:
                    severity: warning
                  annotations:
                    summary: Istio Pilot high total request rate (instance {{ $labels.instance }})
                    description: "Number of Istio Pilot push errors is too high (> 5%). Envoy sidecars might have outdated configuration.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: IstioMixerPrometheusDispatchesLow
                  expr: 'sum(rate(mixer_runtime_dispatches_total{adapter=~"prometheus"}[1m])) < 180'
                  for: 1m
                  labels:
                    severity: warning
                  annotations:
                    summary: Istio Mixer Prometheus dispatches low (instance {{ $labels.instance }})
                    description: "Number of Mixer dispatches to Prometheus is too low. Istio metrics might not be being exported properly.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: IstioHighTotalRequestRate
                  expr: 'sum(rate(istio_requests_total{reporter="destination"}[5m])) > 1000'
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: Istio high total request rate (instance {{ $labels.instance }})
                    description: "Global request rate in the service mesh is unusually high.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: IstioLowTotalRequestRate
                  expr: 'sum(rate(istio_requests_total{reporter="destination"}[5m])) < 100'
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: Istio low total request rate (instance {{ $labels.instance }})
                    description: "Global request rate in the service mesh is unusually low.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: IstioHigh4xxErrorRate
                  expr: 'sum(rate(istio_requests_total{reporter="destination", response_code=~"4.*"}[5m])) / sum(rate(istio_requests_total{reporter="destination"}[5m])) * 100 > 5'
                  for: 1m
                  labels:
                    severity: warning
                  annotations:
                    summary: Istio high 4xx error rate (instance {{ $labels.instance }})
                    description: "High percentage of HTTP 5xx responses in Istio (> 5%).\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: IstioHigh5xxErrorRate
                  expr: 'sum(rate(istio_requests_total{reporter="destination", response_code=~"5.*"}[5m])) / sum(rate(istio_requests_total{reporter="destination"}[5m])) * 100 > 5'
                  for: 1m
                  labels:
                    severity: warning
                  annotations:
                    summary: Istio high 5xx error rate (instance {{ $labels.instance }})
                    description: "High percentage of HTTP 5xx responses in Istio (> 5%).\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: IstioHighRequestLatency
                  expr: 'rate(istio_request_duration_milliseconds_sum{reporter="destination"}[1m]) / rate(istio_request_duration_milliseconds_count{reporter="destination"}[1m]) > 100'
                  for: 1m
                  labels:
                    severity: warning
                  annotations:
                    summary: Istio high request latency (instance {{ $labels.instance }})
                    description: "Istio average requests execution is longer than 100ms.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: IstioLatency99Percentile
                  expr: "histogram_quantile(0.99, sum(rate(istio_request_duration_milliseconds_bucket[1m])) by (destination_canonical_service, destination_workload_namespace, source_canonical_service, source_workload_namespace, le)) > 1"
                  for: 1m
                  labels:
                    severity: warning
                  annotations:
                    summary: Istio latency 99 percentile (instance {{ $labels.instance }})
                    description: "Istio 1% slowest requests are longer than 1s.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: IstioPilotDuplicateEntry
                  expr: "sum(rate(pilot_duplicate_envoy_clusters{}[5m])) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: Istio Pilot Duplicate Entry (instance {{ $labels.instance }})
                    description: "Istio pilot duplicate entry error.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

            #### ArgoCD Alerts
            - name: ArgoCD
              rules:
                - alert: ArgocdServiceNotSynced
                  expr: 'argocd_app_info{sync_status!="Synced"} != 0'
                  for: 15m
                  labels:
                    severity: warning
                  annotations:
                    summary: ArgoCD service not synced (instance {{ $labels.instance }})
                    description: "Service {{ $labels.name }} run by argo is currently not in sync.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                # - alert: ArgocdServiceUnhealthy
                #   expr: 'argocd_app_info{health_status!="Healthy"} != 0'
                #   for: 15m
                #   labels:
                #     severity: warning
                #   annotations:
                #     summary: ArgoCD service unhealthy (instance {{ $labels.instance }})
                #     description: "Service {{ $labels.name }} run by argo is currently not healthy.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

            #### Loki Alerts
            - name: Loki
              rules:
                - alert: LokiProcessTooManyRestarts
                  expr: 'changes(process_start_time_seconds{job=~"loki"}[15m]) > 2'
                  for: 0m
                  labels:
                    severity: warning
                  annotations:
                    summary: Loki process too many restarts (instance {{ $labels.instance }})
                    description: "A loki process had too many restarts (target {{ $labels.instance }})\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: LokiRequestErrors
                  expr: '100 * sum(rate(loki_request_duration_seconds_count{status_code=~"5.."}[1m])) by (namespace, job, route) / sum(rate(loki_request_duration_seconds_count[1m])) by (namespace, job, route) > 10'
                  for: 15m
                  labels:
                    severity: critical
                  annotations:
                    summary: Loki request errors (instance {{ $labels.instance }})
                    description: "The {{ $labels.job }} and {{ $labels.route }} are experiencing errors\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: LokiRequestPanic
                  expr: "sum(increase(loki_panic_total[10m])) by (namespace, job) > 0"
                  for: 5m
                  labels:
                    severity: critical
                  annotations:
                    summary: Loki request panic (instance {{ $labels.instance }})
                    description: "The {{ $labels.job }} is experiencing {{ printf \"%.2f\" $value }}% increase of panics\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: LokiRequestLatency
                  expr: '(histogram_quantile(0.99, sum(rate(loki_request_duration_seconds_bucket{route!~"(?i).*tail.*"}[5m])) by (le)))  > 1'
                  for: 5m
                  labels:
                    severity: critical
                  annotations:
                    summary: Loki request latency (instance {{ $labels.instance }})
                    description: "The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }}s 99th percentile latency\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

            #### CoreDNS Alerts
            - name: CoreDNS
              rules:
                - alert: CorednsPanicCount
                  expr: "increase(coredns_panics_total[1m]) > 0"
                  for: 0m
                  labels:
                    severity: critical
                  annotations:
                    summary: CoreDNS Panic Count (instance {{ $labels.instance }})
                    description: "Number of CoreDNS panics encountered\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

            #### Promtail Alerts
            - name: Promtail
              rules:
                - alert: PromtailRequestErrors
                  expr: '100 * sum(rate(promtail_request_duration_seconds_count{status_code=~"5..|failed"}[1m])) by (namespace, job, route, instance) / sum(rate(promtail_request_duration_seconds_count[1m])) by (namespace, job, route, instance) > 10'
                  for: 5m
                  labels:
                    severity: critical
                  annotations:
                    summary: Promtail request errors (instance {{ $labels.instance }})
                    description: "The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }}% errors.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

                - alert: PromtailRequestLatency
                  expr: "histogram_quantile(0.99, sum(rate(promtail_request_duration_seconds_bucket[5m])) by (le)) > 1"
                  for: 5m
                  labels:
                    severity: critical
                  annotations:
                    summary: Promtail request latency (instance {{ $labels.instance }})
                    description: "The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }}s 99th percentile latency.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

        prometheus.yml:
          scrape_configs:
            - job_name: serviceMonitor/argocd/argocd-metrics/0
              honor_timestamps: true
              scrape_interval: 30s
              scrape_timeout: 10s
              metrics_path: /metrics
              scheme: http
              follow_redirects: true
              relabel_configs:
                - source_labels: [job]
                  separator: ;
                  regex: (.*)
                  target_label: __tmp_prometheus_job_name
                  replacement: $1
                  action: replace
                - source_labels:
                    [__meta_kubernetes_service_label_app_kubernetes_io_name]
                  separator: ;
                  regex: argocd-metrics
                  replacement: $1
                  action: keep
                - source_labels: [__meta_kubernetes_endpoint_port_name]
                  separator: ;
                  regex: metrics
                  replacement: $1
                  action: keep
                - source_labels:
                    [
                      __meta_kubernetes_endpoint_address_target_kind,
                      __meta_kubernetes_endpoint_address_target_name,
                    ]
                  separator: ;
                  regex: Node;(.*)
                  target_label: node
                  replacement: ${1}
                  action: replace
                - source_labels:
                    [
                      __meta_kubernetes_endpoint_address_target_kind,
                      __meta_kubernetes_endpoint_address_target_name,
                    ]
                  separator: ;
                  regex: Pod;(.*)
                  target_label: pod
                  replacement: ${1}
                  action: replace
                - source_labels: [__meta_kubernetes_namespace]
                  separator: ;
                  regex: (.*)
                  target_label: namespace
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_service_name]
                  separator: ;
                  regex: (.*)
                  target_label: service
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_pod_name]
                  separator: ;
                  regex: (.*)
                  target_label: pod
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_pod_container_name]
                  separator: ;
                  regex: (.*)
                  target_label: container
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_service_name]
                  separator: ;
                  regex: (.*)
                  target_label: job
                  replacement: ${1}
                  action: replace
                - separator: ;
                  regex: (.*)
                  target_label: endpoint
                  replacement: metrics
                  action: replace
                - source_labels: [__address__]
                  separator: ;
                  regex: (.*)
                  modulus: 1
                  target_label: __tmp_hash
                  replacement: $1
                  action: hashmod
                - source_labels: [__tmp_hash]
                  separator: ;
                  regex: "0"
                  replacement: $1
                  action: keep
              kubernetes_sd_configs:
                - role: endpoints
                  kubeconfig_file: ""
                  follow_redirects: true
                  namespaces:
                    names:
                      - argocd

            - job_name: serviceMonitor/argocd/argocd-repo-server-metrics/0
              honor_timestamps: true
              scrape_interval: 30s
              scrape_timeout: 10s
              metrics_path: /metrics
              scheme: http
              follow_redirects: true
              relabel_configs:
                - source_labels: [job]
                  separator: ;
                  regex: (.*)
                  target_label: __tmp_prometheus_job_name
                  replacement: $1
                  action: replace
                - source_labels:
                    [__meta_kubernetes_service_label_app_kubernetes_io_name]
                  separator: ;
                  regex: argocd-repo-server
                  replacement: $1
                  action: keep
                - source_labels: [__meta_kubernetes_endpoint_port_name]
                  separator: ;
                  regex: metrics
                  replacement: $1
                  action: keep
                - source_labels:
                    [
                      __meta_kubernetes_endpoint_address_target_kind,
                      __meta_kubernetes_endpoint_address_target_name,
                    ]
                  separator: ;
                  regex: Node;(.*)
                  target_label: node
                  replacement: ${1}
                  action: replace
                - source_labels:
                    [
                      __meta_kubernetes_endpoint_address_target_kind,
                      __meta_kubernetes_endpoint_address_target_name,
                    ]
                  separator: ;
                  regex: Pod;(.*)
                  target_label: pod
                  replacement: ${1}
                  action: replace
                - source_labels: [__meta_kubernetes_namespace]
                  separator: ;
                  regex: (.*)
                  target_label: namespace
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_service_name]
                  separator: ;
                  regex: (.*)
                  target_label: service
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_pod_name]
                  separator: ;
                  regex: (.*)
                  target_label: pod
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_pod_container_name]
                  separator: ;
                  regex: (.*)
                  target_label: container
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_service_name]
                  separator: ;
                  regex: (.*)
                  target_label: job
                  replacement: ${1}
                  action: replace
                - separator: ;
                  regex: (.*)
                  target_label: endpoint
                  replacement: metrics
                  action: replace
                - source_labels: [__address__]
                  separator: ;
                  regex: (.*)
                  modulus: 1
                  target_label: __tmp_hash
                  replacement: $1
                  action: hashmod
                - source_labels: [__tmp_hash]
                  separator: ;
                  regex: "0"
                  replacement: $1
                  action: keep
              kubernetes_sd_configs:
                - role: endpoints
                  kubeconfig_file: ""
                  follow_redirects: true
                  namespaces:
                    names:
                      - argocd
            - job_name: serviceMonitor/argocd/argocd-server-metrics/0
              honor_timestamps: true
              scrape_interval: 30s
              scrape_timeout: 10s
              metrics_path: /metrics
              scheme: http
              follow_redirects: true
              relabel_configs:
                - source_labels: [job]
                  separator: ;
                  regex: (.*)
                  target_label: __tmp_prometheus_job_name
                  replacement: $1
                  action: replace
                - source_labels:
                    [__meta_kubernetes_service_label_app_kubernetes_io_name]
                  separator: ;
                  regex: argocd-server-metrics
                  replacement: $1
                  action: keep
                - source_labels: [__meta_kubernetes_endpoint_port_name]
                  separator: ;
                  regex: metrics
                  replacement: $1
                  action: keep
                - source_labels:
                    [
                      __meta_kubernetes_endpoint_address_target_kind,
                      __meta_kubernetes_endpoint_address_target_name,
                    ]
                  separator: ;
                  regex: Node;(.*)
                  target_label: node
                  replacement: ${1}
                  action: replace
                - source_labels:
                    [
                      __meta_kubernetes_endpoint_address_target_kind,
                      __meta_kubernetes_endpoint_address_target_name,
                    ]
                  separator: ;
                  regex: Pod;(.*)
                  target_label: pod
                  replacement: ${1}
                  action: replace
                - source_labels: [__meta_kubernetes_namespace]
                  separator: ;
                  regex: (.*)
                  target_label: namespace
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_service_name]
                  separator: ;
                  regex: (.*)
                  target_label: service
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_pod_name]
                  separator: ;
                  regex: (.*)
                  target_label: pod
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_pod_container_name]
                  separator: ;
                  regex: (.*)
                  target_label: container
                  replacement: $1
                  action: replace
                - source_labels: [__meta_kubernetes_service_name]
                  separator: ;
                  regex: (.*)
                  target_label: job
                  replacement: ${1}
                  action: replace
                - separator: ;
                  regex: (.*)
                  target_label: endpoint
                  replacement: metrics
                  action: replace
                - source_labels: [__address__]
                  separator: ;
                  regex: (.*)
                  modulus: 1
                  target_label: __tmp_hash
                  replacement: $1
                  action: hashmod
                - source_labels: [__tmp_hash]
                  separator: ;
                  regex: "0"
                  replacement: $1
                  action: keep
              kubernetes_sd_configs:
                - role: endpoints
                  kubeconfig_file: ""
                  follow_redirects: true
                  namespaces:
                    names:
                      - argocd

            - job_name: "prometheus"
              scrape_interval: 5s
              static_configs:
                - targets:
                    - prometheus-server:80

            - job_name: "alertmanager"
              scrape_interval: 10s
              honor_labels: true
              static_configs:
                - targets: ["prometheus-alertmanager:9093"]

            - job_name: "grafana"
              scrape_interval: 10s
              honor_labels: true
              static_configs:
                - targets: ["grafana:80"]

            - job_name: "node-exporter"
              kubernetes_sd_configs:
                - role: endpoints
              relabel_configs:
                - source_labels: [__meta_kubernetes_endpoints_name]
                  regex: "node-exporter"
                  action: keep

            - job_name: "kubernetes-apiservers"

              kubernetes_sd_configs:
                - role: endpoints
              scheme: https

              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

              relabel_configs:
                - source_labels:
                    [
                      __meta_kubernetes_namespace,
                      __meta_kubernetes_service_name,
                      __meta_kubernetes_endpoint_port_name,
                    ]
                  action: keep
                  regex: default;kubernetes;https

            - job_name: "kubernetes-nodes"

              scheme: https

              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - action: labelmap
                  regex: __meta_kubernetes_node_label_(.+)
                - target_label: __address__
                  replacement: kubernetes.default:443
                - source_labels: [__meta_kubernetes_node_name]
                  regex: (.+)
                  target_label: __metrics_path__
                  replacement: /api/v1/nodes/${1}/proxy/metrics

            - job_name: "kubernetes-pods"
              kubernetes_sd_configs:
                - role: pod

              relabel_configs:
                - source_labels:
                    [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels:
                    [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels:
                    [
                      __address__,
                      __meta_kubernetes_pod_annotation_prometheus_io_port,
                    ]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                  target_label: __address__
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - source_labels: [__meta_kubernetes_namespace]
                  action: replace
                  target_label: kubernetes_namespace
                - source_labels: [__meta_kubernetes_pod_name]
                  action: replace
                  target_label: kubernetes_pod_name

            - job_name: kube-state-metrics
              honor_timestamps: true
              scrape_interval: 1m
              scrape_timeout: 1m
              metrics_path: /metrics
              scheme: http
              static_configs:
                - targets:
                    - kube-state-metrics.kube-system:8080

            - job_name: "kubernetes-cadvisor"
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - action: labelmap
                  regex: __meta_kubernetes_node_label_(.+)
                - target_label: __address__
                  replacement: kubernetes.default:443
                - source_labels: [__meta_kubernetes_node_name]
                  regex: (.+)
                  target_label: __metrics_path__
                  replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

            - job_name: "kubernetes-service-endpoints"
              kubernetes_sd_configs:
                - role: endpoints
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_node_name]
                  action: replace
                  target_label: kubernetes_node
                - source_labels:
                    [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels:
                    [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                  action: replace
                  target_label: __scheme__
                  regex: (https?)
                - source_labels:
                    [__meta_kubernetes_service_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels:
                    [
                      __address__,
                      __meta_kubernetes_service_annotation_prometheus_io_port,
                    ]
                  action: replace
                  target_label: __address__
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                - action: labelmap
                  regex: __meta_kubernetes_service_label_(.+)
                - source_labels: [__meta_kubernetes_namespace]
                  action: replace
                  target_label: kubernetes_namespace
                - source_labels: [__meta_kubernetes_service_name]
                  action: replace
                  target_label: kubernetes_namespace

            - job_name: "istiod"
              kubernetes_sd_configs:
                - role: endpoints
                  namespaces:
                    names:
                      - istio-system
              relabel_configs:
                - source_labels:
                    [
                      __meta_kubernetes_service_name,
                      __meta_kubernetes_endpoint_port_name,
                    ]
                  action: keep
                  regex: istiod;http-monitoring

            - job_name: "envoy-stats"
              metrics_path: /stats/prometheus
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_container_port_name]
                  action: keep
                  regex: ".*-envoy-prom"

            - job_name: node
              static_configs:
                - targets: ["prometheus-prometheus-node-exporter:9100"]

            - job_name: "teste-loki"
              scrape_interval: 60s
              static_configs:
                - targets:
                    - teste-loki.teste-loki.svc.cluster.local

            - job_name: "jaeger"
              metrics_path: /metrics
              scrape_interval: 15s
              static_configs:
                - targets:
                    - jaeger--agent.observability.svc.cluster.local:14271
                    - jaeger-collector.observability.svc.cluster.local:14269
                    - jaeger-query.observability.svc.cluster.local:16687

            # - job_name: "sonarqube"
            #   scrape_interval: 60s
            #   static_configs:
            #     - targets:
            #         - sonarqube-jmx-metrics.sonarqube.svc.cluster.local:10443

            - job_name: "otel-collector"
              scrape_interval: 10s
              static_configs:
                - targets:
                    - otel-collector.observability.svc.cluster.local:8889

            - job_name: "cert-manager"
              metrics_path: /metrics
              scrape_interval: 15s
              static_configs:
                - targets:
                    - cert-manager.cert-manager.svc.cluster.local:9402

            - job_name: kubecost
              honor_labels: true
              scrape_interval: 1m
              scrape_timeout: 10s
              metrics_path: /metrics
              scheme: http
              dns_sd_configs:
                - names:
                    - kubecost-cost-analyzer.kubecost
                  type: "A"
                  port: 9003
