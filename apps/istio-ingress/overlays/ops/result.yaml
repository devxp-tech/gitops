apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istio-ingressgateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingressgateway
    app.kubernetes.io/version: 1.22.0
    app_label: istio-ingressgateway
    helm.sh/chart: gateway-1.22.0
    istio: ingressgateway
  name: istio-ingressgateway
  namespace: istio-ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: istio-ingressgateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingressgateway
    app.kubernetes.io/version: 1.22.0
    app_label: istio-ingressgateway
    helm.sh/chart: gateway-1.22.0
    istio: ingressgateway
  name: istio-ingressgateway
  namespace: istio-ingress
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: istio-ingressgateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingressgateway
    app.kubernetes.io/version: 1.22.0
    app_label: istio-ingressgateway
    helm.sh/chart: gateway-1.22.0
    istio: ingressgateway
  name: istio-ingressgateway
  namespace: istio-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-ingressgateway
subjects:
- kind: ServiceAccount
  name: istio-ingressgateway
  namespace: istio-ingress
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    numTrustedProxies: "2"
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
  labels:
    app: istio-ingressgateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingressgateway
    app.kubernetes.io/version: 1.22.0
    app_label: istio-ingressgateway
    helm.sh/chart: gateway-1.22.0
    istio: ingressgateway
  name: istio-ingressgateway
  namespace: istio-ingress
spec:
  externalTrafficPolicy: Local
  ports:
  - name: status-port
    port: 15021
    protocol: TCP
    targetPort: 15021
  - name: http2
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istio-ingressgateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingressgateway
    app.kubernetes.io/version: 1.22.0
    app_label: istio-ingressgateway
    helm.sh/chart: gateway-1.22.0
    istio: ingressgateway
  name: istio-ingressgateway
  namespace: istio-ingress
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        proxy.istio.io/config: '{"discoveryAddress" : "istiod.istio-system.svc:15012"
          }'
        sidecar.istio.io/inject: "true"
      labels:
        app: istio-ingressgateway
        app_label: istio-ingressgateway
        istio: ingressgateway
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - env: null
        image: auto
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        ports:
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1337
          runAsNonRoot: true
          runAsUser: 1337
      securityContext:
        sysctls:
        - name: net.ipv4.ip_unprivileged_port_start
          value: "0"
      serviceAccountName: istio-ingressgateway
      terminationGracePeriodSeconds: 30
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: istio-ingressgateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingressgateway
    app.kubernetes.io/version: 1.22.0
    app_label: istio-ingressgateway
    helm.sh/chart: gateway-1.22.0
    istio: ingressgateway
  name: istio-ingressgateway
  namespace: istio-ingress
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istio-ingressgateway
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: devxp-tech.io
spec:
  commonName: devxp-tech.io
  dnsNames:
  - devxp-tech.io
  - '*.devxp-tech.io'
  issuerRef:
    kind: ClusterIssuer
    name: devxp-tech.io
  secretName: devxp-tech.io
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: diegoluisi.eti.br
spec:
  commonName: diegoluisi.eti.br
  dnsNames:
  - diegoluisi.eti.br
  - '*.diegoluisi.eti.br'
  issuerRef:
    kind: ClusterIssuer
    name: diegoluisi.eti.br
  secretName: diegoluisi.eti.br
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  labels:
    app.kubernetes.io/instance: certs
  name: devxp-tech.io
spec:
  acme:
    email: contato@diegoluisi.eti.br
    privateKeySecretRef:
      name: issuer-key
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - dns01:
        route53:
          region: us-east-1
      selector:
        dnsZones:
        - devxp-tech.io
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  labels:
    app.kubernetes.io/instance: certs
  name: diegoluisi.eti.br
spec:
  acme:
    email: contato@diegoluisi.eti.br
    privateKeySecretRef:
      name: issuer-key
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - dns01:
        route53:
          region: us-east-1
      selector:
        dnsZones:
        - diegoluisi.eti.br
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  labels:
    app.kubernetes.io/version: 1.20.0
    app_label: istio-ingressgateway
  name: istio-ingressgateway
  namespace: istio-ingress
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - '*.diegoluisi.eti.br'
    - '*.devxp-tech.io'
    port:
      name: http
      number: 80
      protocol: HTTP
    tls:
      httpsRedirect: true
  - hosts:
    - '*.diegoluisi.eti.br'
    port:
      name: https-diegoluisi
      number: 443
      protocol: HTTPS
    tls:
      credentialName: diegoluisi.eti.br
      mode: SIMPLE
  - hosts:
    - '*.devxp-tech.io'
    port:
      name: https-devxp
      number: 443
      protocol: HTTPS
    tls:
      credentialName: devxp-tech.io
      mode: SIMPLE
