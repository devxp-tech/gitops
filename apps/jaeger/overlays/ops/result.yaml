apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/version: 1.45.0
    helm.sh/chart: jaeger-0.71.2
    version: 1.45.0
  name: jaeger-collector
  namespace: istio-system
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/version: 1.45.0
    helm.sh/chart: jaeger-0.71.2
    version: 1.45.0
  name: jaeger-query
  namespace: istio-system
---
apiVersion: v1
data:
  oauth2-proxy.cfg: |-
    provider = "oidc"
    https_address = ":4180"
    upstreams = ["http://localhost:16686"]
    redirect_url = "https://jaeger.devxp-tech.io/oauth2/callback"
    client_id = "jaeger-query"
    oidc_issuer_url = "https://dex.devxp-tech.io"
    cookie_secure = "true"
    email_domains = "*"
    oidc_groups_claim = "groups"
    user_id_claim = "preferred_username"
    skip_provider_button = "true"
    cookie_secret = "7LidSn5cK8Lxj9l4LEWc8A=="
kind: ConfigMap
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/version: 1.45.0
    helm.sh/chart: jaeger-0.71.2
    version: 1.45.0
  name: jaeger-oauth-configuration
  namespace: istio-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/version: 1.45.0
    helm.sh/chart: jaeger-0.71.2
    version: 1.45.0
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: grpc
    port: 14250
    protocol: TCP
    targetPort: grpc
  - name: http
    port: 14268
    protocol: TCP
    targetPort: http
  - name: zipkin
    port: 9411
    protocol: TCP
    targetPort: zipkin
  - name: admin
    port: 14269
    targetPort: admin
  selector:
    app: jaeger
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/name: jaeger
    version: 1.45.0
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/version: 1.45.0
    helm.sh/chart: jaeger-0.71.2
    version: 1.45.0
  name: jaeger-query
  namespace: istio-system
spec:
  ports:
  - name: query
    port: 80
    protocol: TCP
    targetPort: 4180
  - name: grpc
    port: 16685
    protocol: TCP
    targetPort: grpc
  - name: admin
    port: 16687
    protocol: TCP
    targetPort: admin
  selector:
    app: jaeger
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/name: jaeger
    version: 1.45.0
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/version: 1.45.0
    helm.sh/chart: jaeger-0.71.2
    version: 1.45.0
  name: jaeger-collector
  namespace: istio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      app.kubernetes.io/component: collector
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/name: jaeger
      version: 1.45.0
  template:
    metadata:
      annotations:
        checksum/config-env: 75a11da44c802486bc6f65640aa48a730f0f684c5c07a42ba3cd1735eb3fb070
      labels:
        app: jaeger
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/name: jaeger
        version: 1.45.0
    spec:
      containers:
      - args: null
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: "9411"
        - name: SPAN_STORAGE_TYPE
          value: memory
        image: jaegertracing/jaeger-collector:1.45.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: admin
        name: jaeger-collector
        ports:
        - containerPort: 14250
          name: grpc
          protocol: TCP
        - containerPort: 14268
          name: http
          protocol: TCP
        - containerPort: 14269
          name: admin
          protocol: TCP
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: admin
        resources: {}
        securityContext: {}
        volumeMounts: null
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      serviceAccountName: jaeger-collector
      volumes: null
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/version: 1.45.0
    helm.sh/chart: jaeger-0.71.2
    version: 1.45.0
  name: jaeger-query
  namespace: istio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      app.kubernetes.io/component: query
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/name: jaeger
      version: 1.45.0
  template:
    metadata:
      labels:
        app: jaeger
        app.kubernetes.io/component: query
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/name: jaeger
        version: 1.45.0
    spec:
      containers:
      - args: null
        env:
        - name: SPAN_STORAGE_TYPE
          value: memory
        - name: QUERY_BASE_PATH
          value: /
        - name: JAEGER_AGENT_PORT
          value: "6831"
        image: jaegertracing/jaeger-query:1.45.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: admin
        name: jaeger-query
        ports:
        - containerPort: 16686
          name: query
          protocol: TCP
        - containerPort: 16685
          name: grpc
          protocol: TCP
        - containerPort: 16687
          name: admin
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: admin
        resources: {}
        securityContext: {}
        volumeMounts: null
      - args:
        - --config
        - /etc/oauth2-proxy/oauth2-proxy.cfg
        - --client-secret
        - $(client-secret)
        env:
        - name: client-secret
          valueFrom:
            secretKeyRef:
              key: client-secret-key
              name: jaeger-secrets
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.3.0
        imagePullPolicy: IfNotPresent
        name: jaeger-agent-oauth2-sidecar
        ports:
        - containerPort: 4180
          name: oauth-proxy
        volumeMounts:
        - mountPath: /etc/oauth2-proxy
          name: jaeger-oauth-configuration
      - args: null
        env:
        - name: REPORTER_GRPC_HOST_PORT
          value: jaeger-collector:14250
        image: jaegertracing/jaeger-agent:1.45.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: admin
        name: jaeger-agent-sidecar
        ports:
        - containerPort: 14271
          name: admin
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: admin
        resources: null
        securityContext: {}
        volumeMounts: null
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      serviceAccountName: jaeger-query
      volumes:
      - configMap:
          name: jaeger-oauth-configuration
        name: jaeger-oauth-configuration
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: jaeger-secrets
  namespace: istio-system
spec:
  encryptedData:
    client-secret-key: AgBD1glBq5b+5WNyQNe80LS90QhClm+l7a9fac2hZqD3SZCNZfgDm0vAa1FEku4s3eC9G3CZ4SnMg+nbYv76vxPjrvGzF8zquITk1waQQgfPrsl4M9mJOEfnkzlzqbAsDOgivO+pAs+iSDnDjYn83CBHjmI9+elJrbW+WA4cUxzprWc44WDnsfwa4p1FRjVEUeVJfP0tLAsGBvtAstSc3RJVttCOXbUJJ9vw+wCchRfBsEFbyPeqBGrpTCvtAjMy1H/JuehQR2mQ0iMY78H9+bPrnq3OVlwmt0TLd7oS9G6U1cahwqnXDXdHuvGZCemH37Z12plHfogcSlM4RBJV3EBTd22HudU+m+qOBPVVKRX/O/Bmy0Zn3SnPN7M2rRzolzGUyP/vQu/F+3aBEJgbPFmjgfQ/LqNw0TO8TBU3fSAZQUHzNzoVEq9ZnjjccVTkyOrF6fOlgXxTpEoJmUFBLxYOYx5lzaER6u0LD3FJrihA2ynotiWtjIQF3Q2cKZy+pA6/0wYQV6j9sIQhhGTfEJ9dzWJ/WMMVComqGbGrezcBUKl5K/33UwJXY2hrOCMZs/4+mlYd+lZKFJrrOUq/nvIyDroNwNvGgyHV26Ut6tkAeoKkFdjc+rTaq4csJfiWUH7dt2FEwDxSb3ayZeZkCgw0U+V0gDQoaC+n8F8pWegocQ2HFrFsr2aakDOH3/3DWg5SqRELwkbCU7b5w8Q+DXcURx8Y+Xz5mS388aGApKv5jIEGbQDIRvzZ
  template:
    metadata:
      creationTimestamp: null
      name: jaeger-secrets
      namespace: istio-system
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  annotations:
    link.argocd.argoproj.io/external-link: https://jaeger.devxp-tech.io
  name: jaeger
  namespace: istio-system
spec:
  gateways:
  - istio-system/istio-ingressgateway
  hosts:
  - jaeger.devxp-tech.io
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: jaeger-query.istio-system.svc.lgsk8sp1.grupologos.local
        port:
          number: 80
