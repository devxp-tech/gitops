apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: monitoring
helmCharts:
  - name: grafana
    includeCRDs: true
    releaseName: grafana
    version: 8.0.2
    repo: https://grafana.github.io/helm-charts
    valuesInline:
      fullname: grafana
      useStatefulSet: true
      # serviceAccount:
      #   name: grafana
      #   annotations:
      #     "eks.amazonaws.com/role-arn": "arn:aws:iam::xxxx:role/monitoring-eks-grafana-role"
      #   automountServiceAccountToken: true
      persistence:
        enabled: true
        existingClaim: grafana
      serviceMonitor:
        enabled: true
      resources:
        requests:
          cpu: 200m
          memory: 256Mi
        limits:
          cpu: 300m
          memory: 512Mi
      grafana.ini:
        server:
          domain: grafana.devxp-tech.io
        auth.github:
          enabled: true
          client_id: '${GF_AUTH_GITHUB_CLIENT_ID}'
          client_secret: '${GF_AUTH_GITHUB_CLIENT_SECRET}'
          scopes: user:email,read:org
          auth_url: https://github.com/login/oauth/authorize
          token_url: https://github.com/login/oauth/access_token
          api_url: https://api.github.com/user
          allow_sign_up: true
          allowed_organizations: ["devxp-tech"]
          role_attribute_path: >-
                contains(groups[*], '@devxp-tech/sre-team') && 'Admin' ||
                contains(groups[*], '@devxp-tech/dev-team') && 'Editor' || 'Viewer'
      admin:
        ## Name of the secret. Can be templated.
        existingSecret: "grafana-secrets"
        userKey: GF_SECURITY_ADMIN_USER
        passwordKey: GF_SECURITY_ADMIN_PASSWORD
      envValueFrom:
        GF_AUTH_GITHUB_CLIENT_ID:
          secretKeyRef:
            name: grafana-secrets
            key: GF_AUTH_GITHUB_CLIENT_ID
        GF_AUTH_GITHUB_CLIENT_SECRET:
          secretKeyRef:
            name: grafana-secrets
            key: GF_AUTH_GITHUB_CLIENT_SECRET
      env:
        # GF_INSTALL_PLUGINS: grafana-simple-json-datasource,alexanderzobnin-zabbix-app
        GF_SERVER_DOMAIN: grafana.devxp-tech.io
        GF_SERVER_ROOT_URL: "https://grafana.devxp-tech.io"
        GF_FEATURE_TOGGLES_ENABLE: "tempoSearch,tempoServiceGraph,tempoApmTable,traceqlEditor"

      datasources:
        datasources.yaml:
          apiVersion: 1
          deleteDatasources:
            - name: mimir
          datasources:
            - name: Alertmanager
              type: alertmanager
              url: http://prometheus-community-kube-alertmanager:9093
              uid: alertmanager
              access: proxy
              jsonData:
                implementation: prometheus

            - name: Loki
              uid: loki
              type: loki
              access: proxy
              orgId: 1
              url: http://loki-gateway.logging.svc
              editable: true
              version: 1
              jsonData:
                alertmanagerUid: alertmanager
                manageAlerts: true
                maxLines: 5000
                timeout: "60"
                derivedFields:
                  - name: Tempo
                    datasourceUid: tempo
                    datasourceName: Tempo
                    matcherRegex: trace_id
                    matcherType: label
                    # matcherRegex: '"trace_id":"([^"]+)"' # Works Old
                    url: "$${__value.raw}"

            - name: Mimir
              uid: mimir
              type: prometheus
              orgId: 1
              url: http://mimir-nginx.monitoring.svc:80/prometheus
              editable: false
              isDefault: true
              jsonData:
                manageAlerts: true # test
                alertmanagerUid: alertmanager # test
                prometheusType: Mimir
                mimirVersion: "2.9.x"
                httpMethod: GET
                exemplarTraceIdDestinations:
                  - name: traceID
                    datasourceUid: tempo

            - name: Tempo
              type: tempo
              uid: tempo
              url: http://tempo.observability:3100
              editable: true
              jsonData:
                httpMethod: GET
                lokiSearch:
                  datasourceUid: loki
                tracesToLogs:
                  datasourceUid: loki
                tracesToLogsV2:
                  datasourceUid: loki
                tracesToMetrics:
                  datasourceUid: mimir
                serviceMap:
                  datasourceUid: mimir
                nodeGraph:
                  enabled: true
              version: 1

            # - name: kube-prometheus-stack
            #   uid: kube-prometheus-stack
            #   type: prometheus
            #   url: http://prometheus-community-kube-prometheus.monitoring.svc.cluster.local:9090
            #   jsonData:
            #     manageAlerts: true
            #     alertmanagerUid: alertmanager
            #     httpMethod: GET

            # - name: Jaeger
            #   uid: jaeger
            #   type: jaeger
            #   access: proxy
            #   url: http://jaeger-query.observability:80
            #   version: 1

            # #Not using Jager
            # - name: Jaeger2
            #   datasourceUid: jaeger
            #   datasourceName: Jaeger
            #   matcherRegex: ((\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+))
            #   url: "$${__value.raw}"

      notifiers:
        notifiers.yaml:
          notifiers:
            - name: prometheus-alertmanager
              type: prometheus-alertmanager
              uid: prometheus-alertmanager
              org_id: 1
              is_default: true
              settings:
                url: http://prometheus-community-kube-alertmanager.monitoring.svc.cluster.local:9093
          delete_notifiers: []

      sidecar:
        plugins:
          enabled: true
        notifiers:
          enabled: false
        dashboards:
          enabled: true
          label: grafana_dashboard
          labelValue: "1"
          folder: /var/lib/grafana/dashboards/external
          folderAnnotation: grafana.devxp-tech.io/dashboard-folder
          #      searchNamespace: ALL
          provider:
            disableDelete: false
            allowUiUpdates: true
            foldersFromFilesStructure: true
        datasources:
          enabled: false
          label: grafana_datasource
          labelValue: "1"

      plugins:
        # - grafana-github-datasource
        - grafana-piechart-panel

      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: "default"
              orgId: 1
              folder: "Kubernetes"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
            - name: "kubernetes"
              orgId: 1
              folder: "Kubernetes"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/kubernetes
            - name: "alertmanager"
              orgId: 1
              folder: "Alertmanager"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/alertmanager
            - name: "argocd"
              orgId: 1
              folder: "ArgoCD"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/argocd
            - name: "aws"
              orgId: 1
              folder: "AWS"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/aws
            - name: "cert-manager"
              orgId: 1
              folder: "Cert-Manager"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/cert-manager
            - name: "github"
              orgId: 1
              folder: "GitHub"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/github
            - name: "golang"
              orgId: 1
              folder: "Golang"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/golang
            - name: "istio"
              orgId: 1
              folder: "Istio"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/istio
            - name: "jaeger"
              orgId: 1
              folder: "Jaeger"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/jaeger
            - name: "karpenter"
              orgId: 1
              folder: "Karpenter"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/karpenter
            - name: "kubecost"
              orgId: 1
              folder: "KubeCost"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/kubecost
            - name: "loki"
              orgId: 1
              folder: "Loki"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/loki
            - name: "mimir"
              orgId: 1
              folder: "Mimir"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/mimir
            - name: "nodejs"
              orgId: 1
              folder: "NodeJS"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/nodejs
            - name: "nginx"
              orgId: 1
              folder: "NGINX"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/nginx
            - name: "opentelemetry"
              orgId: 1
              folder: "OpenTelemetry"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/opentelemetry
            - name: "springboot"
              orgId: 1
              folder: "SpringBoot"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/springboot
      dashboards:
        default:
          # Kubernetes dashboards
          core-dns:
            gnetId: 15762
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
            #url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/core-dns.json"
          k8s-addons-starboard-operator:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s-addons-starboard-operator.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          k8s-system-api-server:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s-system-api-server.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          k8s-views-global:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s-views-global.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          k8s-views-namespaces:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s-views-namespaces.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          k8s-views-nodes:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s-views-nodes.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          k8s-views-pods:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s-views-pods.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          k8s_views_global-kubernetes-views-global:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s_views_global-kubernetes-views-global.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          k8s_views_nodes-kubernetes-views-nodes:
            gnetId: 15759
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
            #url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s_views_nodes-kubernetes-views-nodes.json"
          k8s_views_ns-kubernetes-views-namespaces:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s_views_ns-kubernetes-views-namespaces.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          k8s_views_pods-kubernetes-views-pods:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s_views_pods-kubernetes-views-pods.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          kubernetes-cluster-monitoring:
            gnetId: 3119
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          kubernetes-capacity:
            gnetId: 5228
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          kubernetes-monitoring:
            gnetId: 14623
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          kubernetes-cluster-overview:
            gnetId: 12202
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          k8s-system-coredns:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/k8s-system-coredns.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          # node-exporter-full:
          #   datasource: Mimir
          #   gnetId: 1860
          #   #url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/kubernetes/node-exporter-full.json"
          # kube-state-metrics-v2:
          #   datasource: Mimir
          #   gnetId: 13332
        alertmanager:
          # Alertmanager dashboards
          alertmanager-grafana-dashboard:
            gnetId: 9578
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
        argocd:
          # ArgoCD dashboards
          argocd-cd:
            gnetId: 14584
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          argo-applications:
            gnetId: 19974
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          # ArgoCD Notifications
          argo-notifications:
            gnetId: 19975
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          # ArgoRollouts dashboards
          argo-rollouts:
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
            gnetId: 15386
        github:
          # GitHub dashboards
          github-default:
            datasource: GitHub
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/github/github-default.json"
          github-organization:
            datasource: GitHub
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/github/github-organization.json"
        istio:
          # Istio dashboards
          istio-control-plane-dashboard:
            gnetId: 7645
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          istio-mesh-dashboard:
            gnetId: 7639
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          istio-performance-dashboard:
            gnetId: 12153
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          istio-service-dashboard:
            gnetId: 7636
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          istio-wasm-extension-dashboard:
            gnetId: 13277
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          istio-workload-dashboard:
            gnetId: 7630
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          loki-istio-service:
            gnetId: 14876
            datasource:
              - name: DS_LOKI
                value: Loki
        loki:
          # Loki dashboards
          loki-stack-monitoring:
            gnetId: 14055
            datasource:
              - name: DS_LOKI
                value: Loki
          loki-container-log:
            gnetId: 16966
            datasource:
              - name: DS_LOKI
                value: Loki
          loki-dashboard:
            gnetId: 13186
            datasource:
              - name: DS_PROMETHEUS
                value: Prometheus
              - name: DS_LOKI
                value: Loki
          kubernetes-events-exporter:
            gnetId: 17882
            datasource:
              - name: DS_LOKI
                value: Loki
        # Jaeger dashboards
        jaeger:
          jaeger:
            gnetId: 10001
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
        cert-manager:
          cert-manager:
            gnetId: 11001
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
        # KubeCost dashboards
        kubecost:
          kubecost:
            gnetId: 11270
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
        # Karpenter dashboards
        karpenter:
          karpenter:
            gnetId: 20398
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          # karpenter-metrics:
          #   datasource: Mimir
          #   gnetId: 18862
        opentelemetry:
          # OpenTelemetry dashboards
          opentelemetry-apm:
            gnetId: 19419
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          opentelemetry-collector:
            url: "https://raw.githubusercontent.com/devxp-tech/grafana-dashboards/main/dashboards/otel/otel.json"
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
        springboot:
          # Sprintboot dashboards
          springboot-observability:
            gnetId: 17175
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          jvm-micrometer:
            gnetId: 11955
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          springboot-apm:
            gnetId: 12900
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
        golang:
          # GoLang dashboards
          go-processes:
            gnetId: 6671
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          golang-metrics:
            gnetId: 13240
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
          golang-metrics2:
            gnetId: 10826
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
        nodejs:
          # NodeJS dashboards
          nodejs-applications:
            gnetId: 19062
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
        nginx:
          # NodeJS dashboards
          nginx-prometheus-exporter:
            gnetId: 12930
            datasource:
              - name: DS_PROMETHEUS
                value: Mimir
