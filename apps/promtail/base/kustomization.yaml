apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: logging
helmCharts:
  - name: promtail
    includeCRDs: true
    releaseName: promtail
    version: 6.15.5
    repo: https://grafana.github.io/helm-charts
    valuesInline:
      fullnameOverride: promtail
      # serviceMonitor:
      #   enabled: true
      # prometheusRule:
      #   enabled: true
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: eks.amazonaws.com/compute-type
                    operator: NotIn
                    values:
                      - fargate
      config:
        enableTracing: true
        clients:
          - url: http://loki-gateway.logging.svc/loki/api/v1/push
            external_labels:
              cluster: lgseksd1
              environment: development
        snippets:
          pipelineStages:
            - cri: {}
            - drop:
                source: "container"
                expression: "istio-proxy"
            - drop:
                source: "container"
                expression: "istio-init"
            - match:
                selector: '{app="hotrod"}'
                stages:
                  - regex:
                      expression: ".*(?P<trace>trace_id\"\\S)\\s\"(?P<traceID>[a-zA-Z\\d]+).*"
                      traceID: traceID
                  - labels:
                      traceID:
            - logfmt:
                mapping:
                  time:
                  level:
                  particle_id:
                source: message
            - json:
                expressions:
                  time: '"@timestamp"'
                  message: message
                  level: level
                  service: service
                  type: type
                  plugin: plugin
                  grpcKind: details.grpc.kind  # Test
                  grpcService: details.grpc.service  # Test
                  grpcMethod: details.grpc.method  # Test
                  startTime: details.startTime  # Test
                  EndTime: details.endTime  # Test
                  latency: details.latency  # Test
                  traceID: details.traceID  # Test
            - labels:
                level: level
                service: service
                type: type
                plugin: plugin
                grpcKind: "" # Test
                grpcMethod: "" # Test
                grpcService: "" # Test
                traceID: "" # Test
            - metrics:
                grpc_latency:
                  type: Histogram
                  description: "gRPC latency (ns)"
                  source: latency
                  config:
                    buckets: [0,10000000,20000000,30000000,50000000,80000000,100000000,500000000,1000000000,10000000000,100000000000,1000000000000]
            - timestamp:
                format: RFC3339
                source: "time"
            - output:
                source: message
