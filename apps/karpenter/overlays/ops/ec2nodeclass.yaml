apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2
  blockDeviceMappings:
  - deviceName: /dev/xvda
    ebs:
      deleteOnTermination: true
      volumeSize: 20Gi #4Gi
      volumeType: gp3
  - deviceName: /dev/xvdb
    ebs:
      deleteOnTermination: true
      volumeSize: 50Gi
      volumeType: gp3
  detailedMonitoring: true
  role: Karpenter-vex-dev-usea1-eks-20240806113626522400000005 #KarpenterNodeRole-vex-dev-usea1-eks
  securityGroupSelectorTerms:
  - tags:
      karpenter.sh/discovery: vex-dev-usea1-eks
  subnetSelectorTerms:
  - tags:
      karpenter.sh/discovery: vex-dev-usea1-eks
  tags:
    KarpenerProvisionerName: default
    role: default
    karpenter.sh/cluster_name: vex-dev-usea1-eks
    karpenter.sh/discovery: vex-dev-usea1-eks
    managed-by: karpenter
    node-role.kubernetes.io/worker: worker
  userData: |
    #!/bin/bash

    # Mount data volumes to /data directory on a Amazon Linux Worker Node (excluding OS volume)

    # Identify the device name of the root volume
    root_device=$(mount | awk '$3 == "/" {print $1}')

    # Identify the device names of all attached block devices (excluding root volume)
    device_names=$(lsblk -d -n -o NAME | grep -v "")

    # Loop through each device name and mount the corresponding volume to a directory named /data
    i=1
    for device_name in ; do
      if ! grep -qs "/dev/" /proc/mounts; then
        sudo mkfs.xfs "/dev/"
        sudo mkdir -p "/data"
        sudo mount "/dev/" "/data"
        echo "Mounted /dev/ to /data"
        ((i++))
      fi
    done
