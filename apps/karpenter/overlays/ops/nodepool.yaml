apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: default
spec:
  disruption:
    consolidationPolicy: WhenUnderutilized
    expireAfter: 360h0m0s
  limits:
    cpu: "50"
    memory: 150Gi
  template:
    metadata:
      annotations:
        node-role.kubernetes.io/worker: worker
      labels:
        Role: default
        environment: dev
        intent: default
    spec:
      kubelet:
        evictionHard:
          memory.available: 5%
          nodefs.available: 10%
          nodefs.inodesFree: 10%
      nodeClassRef:
        name: default
      requirements:
      - key: karpenter.k8s.aws/instance-category
        operator: In
        values:
        - c
        - m
        - r
        - t
      - key: karpenter.k8s.aws/instance-cpu
        operator: Gt
        values:
        - "1"
      - key: topology.kubernetes.io/zone
        operator: In
        values:
        - us-east-1a
        - us-east-1b
        - us-east-1c
      - key: karpenter.sh/capacity-type
        operator: In
        values:
        - spot
        - on-demand
      - key: kubernetes.io/arch
        operator: In
        values:
        - amd64
      - key: kubernetes.io/os
        operator: In
        values:
        - linux
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2
  blockDeviceMappings:
  - deviceName: /dev/xvda
    ebs:
      volumeSize: 40Gi
      volumeType: gp3
  role: $KARPENTER_NODE_ROLE
  securityGroupSelectorTerms:
  - tags:
      karpenter.sh/discovery: lgseksd1
  subnetSelectorTerms:
  - tags:
      karpenter.sh/discovery: lgseksd1
  tags:
    Name: karpenter.sh/default
    aws-node-termination-handler/managed: "true"
    karpenter.sh/nodegroup: default
    node-role.kubernetes.io/worker: worker
